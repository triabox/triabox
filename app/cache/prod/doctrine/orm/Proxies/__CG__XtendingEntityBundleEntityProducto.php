<?php

namespace Proxies\__CG__\Xtending\EntityBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Producto extends \Xtending\EntityBundle\Entity\Producto implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setNombre($nombre)
    {
        $this->__load();
        return parent::setNombre($nombre);
    }

    public function getNombre()
    {
        $this->__load();
        return parent::getNombre();
    }

    public function setCodigo($codigo)
    {
        $this->__load();
        return parent::setCodigo($codigo);
    }

    public function getCodigo()
    {
        $this->__load();
        return parent::getCodigo();
    }

    public function setImagen($imagen)
    {
        $this->__load();
        return parent::setImagen($imagen);
    }

    public function getImagen()
    {
        $this->__load();
        return parent::getImagen();
    }

    public function setEspecificacion($especificacion)
    {
        $this->__load();
        return parent::setEspecificacion($especificacion);
    }

    public function getEspecificacion()
    {
        $this->__load();
        return parent::getEspecificacion();
    }

    public function setRegistro($registro)
    {
        $this->__load();
        return parent::setRegistro($registro);
    }

    public function getRegistro()
    {
        $this->__load();
        return parent::getRegistro();
    }

    public function setEntidad(\Xtending\EntityBundle\Entity\Entidades $entidad = NULL)
    {
        $this->__load();
        return parent::setEntidad($entidad);
    }

    public function getEntidad()
    {
        $this->__load();
        return parent::getEntidad();
    }

    public function getEntidadId()
    {
        $this->__load();
        return parent::getEntidadId();
    }

    public function getFileEspecificacion()
    {
        $this->__load();
        return parent::getFileEspecificacion();
    }

    public function getFileImagen()
    {
        $this->__load();
        return parent::getFileImagen();
    }

    public function getFileRegistro()
    {
        $this->__load();
        return parent::getFileRegistro();
    }

    public function getAbsolutePathEspecificacion()
    {
        $this->__load();
        return parent::getAbsolutePathEspecificacion();
    }

    public function getAbsolutePathImagen()
    {
        $this->__load();
        return parent::getAbsolutePathImagen();
    }

    public function getAbsolutePathRegistro()
    {
        $this->__load();
        return parent::getAbsolutePathRegistro();
    }

    public function getWebPath()
    {
        $this->__load();
        return parent::getWebPath();
    }

    public function getWebPathImagen()
    {
        $this->__load();
        return parent::getWebPathImagen();
    }

    public function getWebPathRegistro()
    {
        $this->__load();
        return parent::getWebPathRegistro();
    }

    public function setFileEspecificacion(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {
        $this->__load();
        return parent::setFileEspecificacion($file);
    }

    public function setFileImagen(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {
        $this->__load();
        return parent::setFileImagen($file);
    }

    public function setFileRegistro(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {
        $this->__load();
        return parent::setFileRegistro($file);
    }

    public function upload($file, $ubicacion)
    {
        $this->__load();
        return parent::upload($file, $ubicacion);
    }

    public function removeUpload()
    {
        $this->__load();
        return parent::removeUpload();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nombre', 'codigo', 'imagen', 'especificacion', 'registro', 'entidad');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}