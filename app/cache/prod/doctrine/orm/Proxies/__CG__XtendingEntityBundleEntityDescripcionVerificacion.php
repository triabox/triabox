<?php

namespace Proxies\__CG__\Xtending\EntityBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class DescripcionVerificacion extends \Xtending\EntityBundle\Entity\DescripcionVerificacion implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setDescripcionFalla($descripcionFalla)
    {
        $this->__load();
        return parent::setDescripcionFalla($descripcionFalla);
    }

    public function getDescripcionFalla()
    {
        $this->__load();
        return parent::getDescripcionFalla();
    }

    public function setRiesgo($riesgo)
    {
        $this->__load();
        return parent::setRiesgo($riesgo);
    }

    public function getRiesgo()
    {
        $this->__load();
        return parent::getRiesgo();
    }

    public function setArchivoFalla($archivoFalla)
    {
        $this->__load();
        return parent::setArchivoFalla($archivoFalla);
    }

    public function getArchivoFalla()
    {
        $this->__load();
        return parent::getArchivoFalla();
    }

    public function setDescripcionEfectividad($descripcionEfectividad)
    {
        $this->__load();
        return parent::setDescripcionEfectividad($descripcionEfectividad);
    }

    public function getDescripcionEfectividad()
    {
        $this->__load();
        return parent::getDescripcionEfectividad();
    }

    public function setResponsableTxt($responsable)
    {
        $this->__load();
        return parent::setResponsableTxt($responsable);
    }

    public function getResponsableTxt()
    {
        $this->__load();
        return parent::getResponsableTxt();
    }

    public function setResponsable($responsable)
    {
        $this->__load();
        return parent::setResponsable($responsable);
    }

    public function getResponsable()
    {
        $this->__load();
        return parent::getResponsable();
    }

    public function setFechaEfectividad($fechaEfectividad)
    {
        $this->__load();
        return parent::setFechaEfectividad($fechaEfectividad);
    }

    public function getFechaEfectividad()
    {
        $this->__load();
        return parent::getFechaEfectividad();
    }

    public function setEfectividad($efectividad)
    {
        $this->__load();
        return parent::setEfectividad($efectividad);
    }

    public function getEfectividad()
    {
        $this->__load();
        return parent::getEfectividad();
    }

    public function getAccionCorrectiva()
    {
        $this->__load();
        return parent::getAccionCorrectiva();
    }

    public function setAccionCorrectiva($accionCorrectiva)
    {
        $this->__load();
        return parent::setAccionCorrectiva($accionCorrectiva);
    }

    public function addAccionesCorrectiva($accionCorrectiva)
    {
        $this->__load();
        return parent::addAccionesCorrectiva($accionCorrectiva);
    }

    public function setPreguntaValor(\Xtending\EntityBundle\Entity\PreguntaValor $pregunta)
    {
        $this->__load();
        return parent::setPreguntaValor($pregunta);
    }

    public function getPreguntaValor()
    {
        $this->__load();
        return parent::getPreguntaValor();
    }

    public function getFile()
    {
        $this->__load();
        return parent::getFile();
    }

    public function getAbsolutePath()
    {
        $this->__load();
        return parent::getAbsolutePath();
    }

    public function getWebPath()
    {
        $this->__load();
        return parent::getWebPath();
    }

    public function setFile(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {
        $this->__load();
        return parent::setFile($file);
    }

    public function upload()
    {
        $this->__load();
        return parent::upload();
    }

    public function removeUpload()
    {
        $this->__load();
        return parent::removeUpload();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'descripcionFalla', 'riesgo', 'archivoFalla', 'descripcionEfectividad', 'efectividad', 'responsableTxt', 'fechaEfectividad', 'preguntaValor', 'responsable', 'accionCorrectiva');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}