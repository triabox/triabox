<?php

namespace Proxies\__CG__\Amateur\ObjectBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Punctuation extends \Amateur\ObjectBundle\Entity\Punctuation implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setLocation($location)
    {
        $this->__load();
        return parent::setLocation($location);
    }

    public function getLocation()
    {
        $this->__load();
        return parent::getLocation();
    }

    public function setCircuit($circuit)
    {
        $this->__load();
        return parent::setCircuit($circuit);
    }

    public function getCircuit()
    {
        $this->__load();
        return parent::getCircuit();
    }

    public function setOrganization($organization)
    {
        $this->__load();
        return parent::setOrganization($organization);
    }

    public function getOrganization()
    {
        $this->__load();
        return parent::getOrganization();
    }

    public function setNutrition($nutrition)
    {
        $this->__load();
        return parent::setNutrition($nutrition);
    }

    public function getNutrition()
    {
        $this->__load();
        return parent::getNutrition();
    }

    public function setPunctuality($punctuality)
    {
        $this->__load();
        return parent::setPunctuality($punctuality);
    }

    public function getPunctuality()
    {
        $this->__load();
        return parent::getPunctuality();
    }

    public function setAssistance($assistance)
    {
        $this->__load();
        return parent::setAssistance($assistance);
    }

    public function getAssistance()
    {
        $this->__load();
        return parent::getAssistance();
    }

    public function setKit($kit)
    {
        $this->__load();
        return parent::setKit($kit);
    }

    public function getKit()
    {
        $this->__load();
        return parent::getKit();
    }

    public function setMostPositive($mostPositive)
    {
        $this->__load();
        return parent::setMostPositive($mostPositive);
    }

    public function getMostPositive()
    {
        $this->__load();
        return parent::getMostPositive();
    }

    public function setMostNegative($mostNegative)
    {
        $this->__load();
        return parent::setMostNegative($mostNegative);
    }

    public function getMostNegative()
    {
        $this->__load();
        return parent::getMostNegative();
    }

    public function setComment($comment)
    {
        $this->__load();
        return parent::setComment($comment);
    }

    public function getComment()
    {
        $this->__load();
        return parent::getComment();
    }

    public function getTotal()
    {
        $this->__load();
        return parent::getTotal();
    }

    public function setTotal($total)
    {
        $this->__load();
        return parent::setTotal($total);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'location', 'circuit', 'organization', 'nutrition', 'punctuality', 'assistance', 'kit', 'total', 'mostPositive', 'mostNegative', 'comment');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}