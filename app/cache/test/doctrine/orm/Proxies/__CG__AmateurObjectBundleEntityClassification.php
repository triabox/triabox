<?php

namespace Proxies\__CG__\Amateur\ObjectBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Classification extends \Amateur\ObjectBundle\Entity\Classification implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function addEvent(\Amateur\ObjectBundle\Entity\Event $event)
    {
        $this->__load();
        return parent::addEvent($event);
    }

    public function getEvent()
    {
        $this->__load();
        return parent::getEvent();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setCategoryName($categoryName)
    {
        $this->__load();
        return parent::setCategoryName($categoryName);
    }

    public function getCategoryName()
    {
        $this->__load();
        return parent::getCategoryName();
    }

    public function setOfficialTime($officialTime)
    {
        $this->__load();
        return parent::setOfficialTime($officialTime);
    }

    public function getOfficialTime()
    {
        $this->__load();
        return parent::getOfficialTime();
    }

    public function setNetoTime($netoTime)
    {
        $this->__load();
        return parent::setNetoTime($netoTime);
    }

    public function getNetoTime()
    {
        $this->__load();
        return parent::getNetoTime();
    }

    public function setClassificationcol($classificationcol)
    {
        $this->__load();
        return parent::setClassificationcol($classificationcol);
    }

    public function getClassificationcol()
    {
        $this->__load();
        return parent::getClassificationcol();
    }

    public function setExtraData($extraData)
    {
        $this->__load();
        return parent::setExtraData($extraData);
    }

    public function getExtraData()
    {
        $this->__load();
        return parent::getExtraData();
    }

    public function setSexo($sexo)
    {
        $this->__load();
        return parent::setSexo($sexo);
    }

    public function getSexo()
    {
        $this->__load();
        return parent::getSexo();
    }

    public function setLastname($lastname)
    {
        $this->__load();
        return parent::setLastname($lastname);
    }

    public function getLastname()
    {
        $this->__load();
        return parent::getLastname();
    }

    public function setCategoryId($categoryId)
    {
        $this->__load();
        return parent::setCategoryId($categoryId);
    }

    public function getCategoryId()
    {
        $this->__load();
        return parent::getCategoryId();
    }

    public function setEvent(\Amateur\ObjectBundle\Entity\Event $event)
    {
        $this->__load();
        return parent::setEvent($event);
    }

    public function getOverallRank()
    {
        $this->__load();
        return parent::getOverallRank();
    }

    public function setOverallRank($overallRank)
    {
        $this->__load();
        return parent::setOverallRank($overallRank);
    }

    public function getDivRank()
    {
        $this->__load();
        return parent::getDivRank();
    }

    public function setDivRank($divRank)
    {
        $this->__load();
        return parent::setDivRank($divRank);
    }

    public function getBib()
    {
        $this->__load();
        return parent::getBib();
    }

    public function setBib($bib)
    {
        $this->__load();
        return parent::setBib($bib);
    }

    public function getSwim()
    {
        $this->__load();
        return parent::getSwim();
    }

    public function setSwim($swim)
    {
        $this->__load();
        return parent::setSwim($swim);
    }

    public function getBike()
    {
        $this->__load();
        return parent::getBike();
    }

    public function setBike($bike)
    {
        $this->__load();
        return parent::setBike($bike);
    }

    public function getRunFirst()
    {
        $this->__load();
        return parent::getRunFirst();
    }

    public function setRunFirst($runFirst)
    {
        $this->__load();
        return parent::setRunFirst($runFirst);
    }

    public function getRunLast()
    {
        $this->__load();
        return parent::getRunLast();
    }

    public function setRunLast($runLast)
    {
        $this->__load();
        return parent::setRunLast($runLast);
    }

    public function getIsUser()
    {
        $this->__load();
        return parent::getIsUser();
    }

    public function setIsUser($isUser)
    {
        $this->__load();
        return parent::setIsUser($isUser);
    }

    public function getNationality()
    {
        $this->__load();
        return parent::getNationality();
    }

    public function setNationality($nationality)
    {
        $this->__load();
        return parent::setNationality($nationality);
    }

    public function getSecondsNetoTime()
    {
        $this->__load();
        return parent::getSecondsNetoTime();
    }

    public function setSecondsNetoTime()
    {
        $this->__load();
        return parent::setSecondsNetoTime();
    }

    public function getEnrolled()
    {
        $this->__load();
        return parent::getEnrolled();
    }

    public function setEnrolled($enrolled)
    {
        $this->__load();
        return parent::setEnrolled($enrolled);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'categoryName', 'officialTime', 'netoTime', 'extraData', 'sexo', 'lastname', 'categoryId', 'overallRank', 'divRank', 'bib', 'nationality', 'swim', 'bike', 'runFirst', 'runLast', 'isUser', 'enrolled', 'event');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}